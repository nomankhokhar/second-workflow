name: Website Deployment using ReuseAble Workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache available do not install dependencies
        run: |
          cd jobExecution
          npm ci
      - name: Lint code
        run: |
          cd jobExecution
          npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache available do not install dependencies
        run: |
          cd jobExecution
          npm ci
      - name: Test code
        id: test-code
        run: |
          cd jobExecution
          npm run test
      - name: Upload test report
        if: ${{ failure() && steps.test-code.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache available do not install dependencies
        run: |
          cd jobExecution
          npm ci
      - name: Build website
        id: build-website
        run: |
          cd jobExecution
          npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reUseable.yaml
    with:
      artifact-name: disk-files
  report:
    needs: ["lint", "test", "deploy"]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ github }}"
